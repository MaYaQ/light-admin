/* stylelint-disable rule-empty-line-before */
/* stylelint-disable number-max-precision */
/* stylelint-disable comment-empty-line-before */
/* stylelint-disable prettier/prettier */
/** disable-eslint */
 *{
    box-sizing: border-box;
    outline: none;
  }
  
  html {
    font-size: 13px;
  }
  /* reset 
  body {
    margin: 0;
    font-family: Arial, Helvetica, sans-serif;
    line-height: 1.2em;
    background-color: #f1f1f1;
  }
  
  a {
    color: #999;
  }
  */
  $colors: (
    "primary": #db9e3f,
    "white": #fff,
    "light": #f9f9f9,
    "grey": #999,
    "dark-1": #343440,
    "dark": #222,
    "black": #000,
    "blue":rgb(10 147 226)
  );
  
  // 颜色 背景色
  @each $colorKey, $color in $colors {
    .text-#{$colorKey} {
      color: $color;
    }
    .bg-#{$colorKey} {
      background-color: $color;
    }
  }
  
  // 文字对齐方式
  @each $var in (left, center, right) {
    .text-#{$var} {
      text-align: $var;
    }
  }
  
  // 字体大小
  $base-font-size: 1;
  $font-sizes: (
    xs: 0.769231rem,
    //10px
      sm: 0.923077rem,
    //12px
      md: 1rem,
    //13px
      lg: 1.076923rem,
    //14px
      xl: 1.230769rem， //16px,,
  );
  
  @each $sizeKey, $size in $font-sizes {
    .fs-#{$sizeKey} {
      font-size: $size;
    }
  }
  
  .fl{
    float:left
  }
  .fr{
    float:right
  }

  // flex
  .d-flex {
    display: flex;
  }
  .flex-column {
    flex-direction: column;
  }
  .flex-1 {
    flex: 1;
  }
  .flex-grow {
  }

  // justify-content
  $flex-jc: (
    start: flex-start,
    center: center,
    end: flex-end,
    between: space-between,
    around: space-around,
  );

  @each $key, $value in $flex-jc {
    .jc-#{$key} {
      justify-content: $value;
    }
  }

  // justify-content
  $flex-ai: (
    start: flex-start,
    center: center,
    end: flex-end,
    stretch: stretch,
    bl:baseline
  );

  @each $key, $value in $flex-ai {
    .ai-#{$key} {
      align-items: $value;
    }
  }

  @each $key, $value in $flex-jc {
    .ac-#{$key} {
      align-content: $value;
    }
  }
  .ac-stretch{align-content:stretch}
  
  // margin padding
  $spacing-types: (
    m: margin,
    p: padding,
  );
  $spacing-directions: (
    t: top,
    r: right,
    b: bottom,
    l: left,
  );
  $base-spacing-size: 1rem;
  $spacing-sizes: (
    0: 0,
    1: 0.25,
    2: 0.5,
    3: 1,
    4: 1.5,
    5: 3,
  );

  @for $i from 1 through 100{
    .w-#{$i}{
      width: 0.25 * $i * $base-spacing-size ;
    }
  }

  // m-1  margig: 0.25rem
  @each $typeKey, $type in $spacing-types {
    @each $sizeKey, $size in $spacing-sizes {
      .#{$typeKey}-#{$sizeKey} {
        #{$type}: $base-spacing-size * $size;
      }
    }
  }

  // mx-1  margig-left,right: 0.25rem
  // my-1  margig-top,bottom: 0.25rem
  @each $typeKey, $type in $spacing-types {
    @each $sizeKey, $size in $spacing-sizes {
      .#{$typeKey}x-#{$sizeKey} {
        #{$type}-left: $base-spacing-size * $size;
        #{$type}-right: $base-spacing-size * $size;
      };
      .#{$typeKey}y-#{$sizeKey} {
        #{$type}-top: $base-spacing-size * $size;
        #{$type}-bottom: $base-spacing-size * $size;
      }
    }
  }

  // mt-1  margin-top: 0.25rem
  @each $typeKey, $type in $spacing-types {
    @each $directionKey, $direction in $spacing-directions {
      @each $sizeKey, $size in $spacing-sizes {
        .#{$typeKey}#{$directionKey}-#{$sizeKey} {
          #{$type}-#{$direction}: $base-spacing-size * $size;
        }
      }
    }
  }



$border-types: (
  t:"top",
  b:"bottom",
  l:"left",
  r:"right"
);

 @each $typeKey, $type in $border-types {
    .b-#{$typeKey} {
      border-#{$type}:  1px solid #ccc;
    }
}
.b-0{
  border: 0!important;
}
.b-1{
  border: 1px!important;
}
.w100{
  width:100%
}
.hand{
  cursor: pointer;
}